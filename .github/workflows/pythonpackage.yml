name: Python package

on:
  push:
  pull_request:
  schedule:
    - cron: '0 6 * * *'  # Daily 6AM UTC build

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9, "3.10", 3.11, 3.12-dev, pypy39]
        exclude:
          # sqlite3 exit handling seems to get in the way
          - os: macos-latest
            python-version: pypy39
          # doesn't support passing in bytestrings to os.scandir
          - os: windows-latest
            python-version: pypy39
          # path encoding
          - os: windows-latest
            python-version: 3.7
          # path encoding
          - os: macos-latest
            python-version: 3.7
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install native dependencies (Ubuntu)
      run: sudo apt-get update && sudo apt-get install -y libgpgme-dev libgpg-error-dev
      if: "matrix.os == 'ubuntu-latest'"
    - name: Install native dependencies (MacOS)
      run: brew install swig gpgme
      if: "matrix.os == 'macos-latest'"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pip coverage codecov flake8 fastimport
    - name: Install gpg on supported platforms
      run: pip install --upgrade gpg
      if: "matrix.os != 'windows-latest' && matrix.python-version != 'pypy3'"
    - name: Install mypy
      run: |
        pip install --upgrade mypy types-paramiko types-certifi
      if: "matrix.python-version != 'pypy39'"
    - name: Style checks
      run: |
        python -m flake8
    - name: Typing checks
      run: |
        python -m mypy dulwich
      if: "matrix.python-version != 'pypy39'"
    - name: Build
      run: |
        python setup.py build_ext -i
    - name: Coverage test suite run
      run: |
        python -m coverage run -p -m unittest dulwich.tests.test_suite
    - name: Upload coverage details
      run: |
        codecov
